{
  "address": "0x3450B5F5EAC8514cc496A1649D3f47B335f8bbA6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rootChainManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Predicate",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetAllowance",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf72dd60e986312224e171812b17ffaa346b8e230c6d753e8e81609469a4e44da",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xB011D306D36c396847bA42b1c7AEb8E96C540d9a",
    "contractAddress": null,
    "transactionIndex": 3,
    "gasUsed": "875655",
    "logsBloom": "0x
    "blockHash": "0x7904b76556b985537aa9dcfa0b76b927b566326165f01457bf0ae628d759797c",
    "transactionHash": "0xf72dd60e986312224e171812b17ffaa346b8e230c6d753e8e81609469a4e44da",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 4818437,
        "transactionHash": "0xf72dd60e986312224e171812b17ffaa346b8e230c6d753e8e81609469a4e44da",
        "address": "0x3450B5F5EAC8514cc496A1649D3f47B335f8bbA6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000004e59b44847b379578588920ca78fbf26c0b4956c"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x7904b76556b985537aa9dcfa0b76b927b566326165f01457bf0ae628d759797c"
      }
    ],
    "blockNumber": 4818437,
    "cumulativeGasUsed": "969930",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xc40a66AFB908789341A58B8423F89fE2cb7Dc1f9",
    "0x0000000000000000000000000000000000000000",
    "0x0000000000000000000000000000000000000000"
  ],
  "solcInputHash": "63d7299ce56b9aa4cea635dfe9464cfc",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rootChainManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Predicate\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetAllowance\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolygonCommunityVault.sol\":\"PolygonCommunityVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\"},\"contracts/PolygonCommunityVault.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./matic/IRootChainManager.sol\\\";\\n\\ncontract PolygonCommunityVault is Ownable {\\n    IERC20 private _bond;\\n    IRootChainManager _rootChainManager;\\n    address _erc20Predicate;\\n\\n    constructor (address bond, address rootChainManager, address erc20Predicate) {\\n        _bond = IERC20(bond);\\n        \\n        if (rootChainManager != address(0)) {\\n            require(erc20Predicate != address(0), \\\"if root chain manager is set, erc20 predicate must not be 0x0\\\");\\n\\n            _erc20Predicate = erc20Predicate;\\n            _rootChainManager = IRootChainManager(rootChainManager);\\n        }\\n    }\\n\\n    event SetAllowance(address indexed caller, address indexed spender, uint256 amount);\\n\\n    function setAllowance(address spender, uint amount) public onlyOwner {\\n        _bond.approve(spender, amount);\\n\\n        emit SetAllowance(msg.sender, spender, amount);\\n    }\\n\\n    // -----\\n    // TODO need to discuss if public or onlyOwner\\n    function depositToken(address token) public {\\n        require(token != address(0), \\\"token to be deposited must be specified\\\");\\n        require(_erc20Predicate != address(0), \\\"deposit to polygon not enabled on this vault\\\");\\n\\n        uint256 amount = IERC20(token).balanceOf(address(this));\\n        IERC20(token).approve(_erc20Predicate, amount);\\n        _rootChainManager.depositFor(address(this), token, abi.encode(amount));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x5bb03526b1d06cc307fef9f37b96d1b5820027490d1a42ff6ede574e2e0607b6\",\"license\":\"Apache-2.0\"},\"contracts/matic/IRootChainManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IRootChainManager {\\n    event TokenMapped(\\n        address indexed rootToken,\\n        address indexed childToken,\\n        bytes32 indexed tokenType\\n    );\\n\\n    event PredicateRegistered(\\n        bytes32 indexed tokenType,\\n        address indexed predicateAddress\\n    );\\n\\n    function registerPredicate(bytes32 tokenType, address predicateAddress)\\n        external;\\n\\n    function mapToken(\\n        address rootToken,\\n        address childToken,\\n        bytes32 tokenType\\n    ) external;\\n\\n    function cleanMapToken(\\n        address rootToken,\\n        address childToken\\n    ) external;\\n\\n    function remapToken(\\n        address rootToken,\\n        address childToken,\\n        bytes32 tokenType\\n    ) external;\\n\\n    function depositEtherFor(address user) external payable;\\n\\n    function depositFor(\\n        address user,\\n        address rootToken,\\n        bytes calldata depositData\\n    ) external;\\n\\n    function exit(bytes calldata inputData) external;\\n}\\n\",\"keccak256\":\"0x541a58b38c01441c5b90d64c127dc3148ecfd90034a590abeeb9ebfaee4b8242\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620011a1380380620011a183398181016040528101906200003791906200027b565b6000620000496200025c60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35082600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146200025357600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415620001d0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401620001c790620002f8565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050620003c8565b600033905090565b6000815190506200027581620003ae565b92915050565b6000806000606084860312156200029157600080fd5b6000620002a18682870162000264565b9350506020620002b48682870162000264565b9250506040620002c78682870162000264565b9150509250925092565b6000620002e0603d836200031a565b9150620002ed826200035f565b604082019050919050565b600060208201905081810360008301526200031381620002d1565b9050919050565b600082825260208201905092915050565b600062000338826200033f565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b7f696620726f6f7420636861696e206d616e61676572206973207365742c20657260008201527f63323020707265646963617465206d757374206e6f7420626520307830000000602082015250565b620003b9816200032b565b8114620003c557600080fd5b50565b610dc980620003d86000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632fd552651461005c578063310ec4a714610078578063715018a6146100945780638da5cb5b1461009e578063f2fde38b146100bc575b600080fd5b610076600480360381019061007191906108c8565b6100d8565b005b610092600480360381019061008d91906108f1565b6103cb565b005b61009c610560565b005b6100a661069a565b6040516100b39190610a62565b60405180910390f35b6100d660048036038101906100d191906108c8565b6106c3565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610b44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d190610b04565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102159190610a62565b60206040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610956565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102c4929190610abb565b602060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610316919061092d565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb3084846040516020016103689190610b64565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161039593929190610a7d565b600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050505050565b6103d361086c565b73ffffffffffffffffffffffffffffffffffffffff166103f161069a565b73ffffffffffffffffffffffffffffffffffffffff1614610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90610b24565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016104a4929190610abb565b602060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061092d565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf836040516105549190610b64565b60405180910390a35050565b61056861086c565b73ffffffffffffffffffffffffffffffffffffffff1661058661069a565b73ffffffffffffffffffffffffffffffffffffffff16146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610b24565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106cb61086c565b73ffffffffffffffffffffffffffffffffffffffff166106e961069a565b73ffffffffffffffffffffffffffffffffffffffff161461073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690610b24565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a690610ae4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008135905061088381610d4e565b92915050565b60008151905061089881610d65565b92915050565b6000813590506108ad81610d7c565b92915050565b6000815190506108c281610d7c565b92915050565b6000602082840312156108da57600080fd5b60006108e884828501610874565b91505092915050565b6000806040838503121561090457600080fd5b600061091285828601610874565b92505060206109238582860161089e565b9150509250929050565b60006020828403121561093f57600080fd5b600061094d84828501610889565b91505092915050565b60006020828403121561096857600080fd5b6000610976848285016108b3565b91505092915050565b61098881610bac565b82525050565b600061099982610b7f565b6109a38185610b8a565b93506109b3818560208601610bf4565b6109bc81610c27565b840191505092915050565b60006109d4602683610b9b565b91506109df82610c38565b604082019050919050565b60006109f7602c83610b9b565b9150610a0282610c87565b604082019050919050565b6000610a1a602083610b9b565b9150610a2582610cd6565b602082019050919050565b6000610a3d602783610b9b565b9150610a4882610cff565b604082019050919050565b610a5c81610bea565b82525050565b6000602082019050610a77600083018461097f565b92915050565b6000606082019050610a92600083018661097f565b610a9f602083018561097f565b8181036040830152610ab1818461098e565b9050949350505050565b6000604082019050610ad0600083018561097f565b610add6020830184610a53565b9392505050565b60006020820190508181036000830152610afd816109c7565b9050919050565b60006020820190508181036000830152610b1d816109ea565b9050919050565b60006020820190508181036000830152610b3d81610a0d565b9050919050565b60006020820190508181036000830152610b5d81610a30565b9050919050565b6000602082019050610b796000830184610a53565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610bb782610bca565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c12578082015181840152602081019050610bf7565b83811115610c21576000848401525b50505050565b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420746f20706f6c79676f6e206e6f7420656e61626c6564206f60008201527f6e2074686973207661756c740000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f6b656e20746f206265206465706f7369746564206d75737420626520737060008201527f6563696669656400000000000000000000000000000000000000000000000000602082015250565b610d5781610bac565b8114610d6257600080fd5b50565b610d6e81610bbe565b8114610d7957600080fd5b50565b610d8581610bea565b8114610d9057600080fd5b5056fea26469706673582212201b2ec617339e134eb4be32bf9c3045407cc5df39087e873e7e747a6f93298c4664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632fd552651461005c578063310ec4a714610078578063715018a6146100945780638da5cb5b1461009e578063f2fde38b146100bc575b600080fd5b610076600480360381019061007191906108c8565b6100d8565b005b610092600480360381019061008d91906108f1565b6103cb565b005b61009c610560565b005b6100a661069a565b6040516100b39190610a62565b60405180910390f35b6100d660048036038101906100d191906108c8565b6106c3565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013f90610b44565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156101da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d190610b04565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102159190610a62565b60206040518083038186803b15801561022d57600080fd5b505afa158015610241573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102659190610956565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102c4929190610abb565b602060405180830381600087803b1580156102de57600080fd5b505af11580156102f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610316919061092d565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb3084846040516020016103689190610b64565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161039593929190610a7d565b600060405180830381600087803b1580156103af57600080fd5b505af11580156103c3573d6000803e3d6000fd5b505050505050565b6103d361086c565b73ffffffffffffffffffffffffffffffffffffffff166103f161069a565b73ffffffffffffffffffffffffffffffffffffffff1614610447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043e90610b24565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016104a4929190610abb565b602060405180830381600087803b1580156104be57600080fd5b505af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f6919061092d565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf836040516105549190610b64565b60405180910390a35050565b61056861086c565b73ffffffffffffffffffffffffffffffffffffffff1661058661069a565b73ffffffffffffffffffffffffffffffffffffffff16146105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d390610b24565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6106cb61086c565b73ffffffffffffffffffffffffffffffffffffffff166106e961069a565b73ffffffffffffffffffffffffffffffffffffffff161461073f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073690610b24565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a690610ae4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b60008135905061088381610d4e565b92915050565b60008151905061089881610d65565b92915050565b6000813590506108ad81610d7c565b92915050565b6000815190506108c281610d7c565b92915050565b6000602082840312156108da57600080fd5b60006108e884828501610874565b91505092915050565b6000806040838503121561090457600080fd5b600061091285828601610874565b92505060206109238582860161089e565b9150509250929050565b60006020828403121561093f57600080fd5b600061094d84828501610889565b91505092915050565b60006020828403121561096857600080fd5b6000610976848285016108b3565b91505092915050565b61098881610bac565b82525050565b600061099982610b7f565b6109a38185610b8a565b93506109b3818560208601610bf4565b6109bc81610c27565b840191505092915050565b60006109d4602683610b9b565b91506109df82610c38565b604082019050919050565b60006109f7602c83610b9b565b9150610a0282610c87565b604082019050919050565b6000610a1a602083610b9b565b9150610a2582610cd6565b602082019050919050565b6000610a3d602783610b9b565b9150610a4882610cff565b604082019050919050565b610a5c81610bea565b82525050565b6000602082019050610a77600083018461097f565b92915050565b6000606082019050610a92600083018661097f565b610a9f602083018561097f565b8181036040830152610ab1818461098e565b9050949350505050565b6000604082019050610ad0600083018561097f565b610add6020830184610a53565b9392505050565b60006020820190508181036000830152610afd816109c7565b9050919050565b60006020820190508181036000830152610b1d816109ea565b9050919050565b60006020820190508181036000830152610b3d81610a0d565b9050919050565b60006020820190508181036000830152610b5d81610a30565b9050919050565b6000602082019050610b796000830184610a53565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610bb782610bca565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b83811015610c12578082015181840152602081019050610bf7565b83811115610c21576000848401525b50505050565b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420746f20706f6c79676f6e206e6f7420656e61626c6564206f60008201527f6e2074686973207661756c740000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f6b656e20746f206265206465706f7369746564206d75737420626520737060008201527f6563696669656400000000000000000000000000000000000000000000000000602082015250565b610d5781610bac565b8114610d6257600080fd5b50565b610d6e81610bbe565b8114610d7957600080fd5b50565b610d8581610bea565b8114610d9057600080fd5b5056fea26469706673582212201b2ec617339e134eb4be32bf9c3045407cc5df39087e873e7e747a6f93298c4664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 220,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_bond",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IERC20)187"
      },
      {
        "astId": 223,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_rootChainManager",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IRootChainManager)430"
      },
      {
        "astId": 225,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_erc20Predicate",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IERC20)187": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IRootChainManager)430": {
        "encoding": "inplace",
        "label": "contract IRootChainManager",
        "numberOfBytes": "20"
      }
    }
  }
}