{
  "address": "0x7F33bA1355ae21383815f793d00ef36158692CA1",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetAllowance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferToChild",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rootChainManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20Predicate",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferToChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x853aab4330d43ab9a5a4e02467b6165cea1314c2269e0a67c7d1cb12e9b42360",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xB011D306D36c396847bA42b1c7AEb8E96C540d9a",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "1603259",
    "logsBloom": "0x
    "blockHash": "0x1209a882a72578b15b98626d83be16aaa13f06ab3b317d0979f5092500fd287c",
    "transactionHash": "0x853aab4330d43ab9a5a4e02467b6165cea1314c2269e0a67c7d1cb12e9b42360",
    "logs": [],
    "blockNumber": 4889335,
    "cumulativeGasUsed": "1603259",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "87a464b76760a638dc7930bef06ebcd1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToChild\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rootChainManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Predicate\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferToChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolygonCommunityVault.sol\":\"PolygonCommunityVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x99f5c21018d796db7833a2100bb0e7411999e248a3c950fb526eee5d2bf47cb7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\"},\"contracts/PolygonCommunityVault.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\n\\nimport \\\"./matic/IRootChainManager.sol\\\";\\n\\ncontract PolygonCommunityVault is OwnableUpgradeable {\\n    using SafeERC20 for IERC20;\\n\\n    IRootChainManager internal rootChainManager;\\n    address internal erc20Predicate;\\n\\n    address public token;\\n\\n    event SetAllowance(address indexed caller, address indexed spender, uint256 amount);\\n    event TransferToChild(address indexed caller, address indexed token,  uint256 amount);\\n\\n    function initialize(address _token, address _rootChainManager, address _erc20Predicate)  public initializer {\\n        require(_token != address(0), \\\"Vault: a valid token address must be provided\\\");\\n\\n        __Ownable_init();\\n\\n        token = _token;\\n\\n        if (_rootChainManager != address(0)) {\\n            require(_erc20Predicate != address(0), \\\"Vault: erc20Predicate must not be 0x0\\\");\\n\\n            erc20Predicate = _erc20Predicate;\\n            rootChainManager = IRootChainManager(_rootChainManager);\\n        }\\n     }\\n\\n    function setAllowance(address spender, uint amount) public onlyOwner {\\n        IERC20(token).safeApprove(spender, amount);\\n\\n        emit SetAllowance(msg.sender, spender, amount);\\n    }\\n\\n    function transferToChild() public { // onlyOnRoot , maybe onlyOwner\\n        require(erc20Predicate != address(0), \\\"Vault: transfer to child chain is disabled\\\");\\n\\n        IERC20 erc20 = IERC20(token);\\n\\n        uint256 amount = erc20.balanceOf(address(this));\\n        erc20.safeApprove(erc20Predicate, amount);\\n        rootChainManager.depositFor(address(this), token, abi.encode(amount));\\n\\n        emit TransferToChild(msg.sender, token, amount);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xfa649aed4fdb46dd0f77075da41aca86146a809a4ece0e14ce478388ba797459\",\"license\":\"Apache-2.0\"},\"contracts/matic/IRootChainManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IRootChainManager {\\n    function depositEtherFor(address user) external payable;\\n\\n    function depositFor(\\n        address user,\\n        address rootToken,\\n        bytes calldata depositData\\n    ) external;\\n\\n    function exit(bytes calldata inputData) external;\\n}\\n\",\"keccak256\":\"0x4d5bd5093599321938bc1d23f401687db9aead051d393be24dc69ab68e6fb495\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611c20806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638e9762fa1161005b5780638e9762fa146100c6578063c0c53b8b146100d0578063f2fde38b146100ec578063fc0c546a146101085761007d565b8063310ec4a714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190611320565b610126565b005b6100a6610258565b005b6100b0610395565b6040516100bd91906115e4565b60405180910390f35b6100ce6103bf565b005b6100ea60048036038101906100e591906112d1565b6106af565b005b610106600480360381019061010191906112a8565b61096b565b005b610110610b17565b60405161011d91906115e4565b60405180910390f35b61012e610b3d565b73ffffffffffffffffffffffffffffffffffffffff1661014c610395565b73ffffffffffffffffffffffffffffffffffffffff16146101a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019990611771565b60405180910390fd5b6101ef8282606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b459092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf8360405161024c91906117f1565b60405180910390a35050565b610260610b3d565b73ffffffffffffffffffffffffffffffffffffffff1661027e610395565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610451576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610448906116f1565b60405180910390fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b391906115e4565b60206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190611385565b9050610552606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16610b459092919063ffffffff16565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516020016105c591906117f1565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016105f293929190611628565b600060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b50505050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f74cfd0716c6a416cc5488fa30bf7a391241d033438366aa274c6ab41e7077e45836040516106a391906117f1565b60405180910390a35050565b600060019054906101000a900460ff16806106d5575060008054906101000a900460ff16155b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610764576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611751565b60405180910390fd5b6107dc610ca3565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461094457600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b8906116b1565b60405180910390fd5b81606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80156109655760008060016101000a81548160ff0219169083151502179055505b50505050565b610973610b3d565b73ffffffffffffffffffffffffffffffffffffffff16610991610395565b73ffffffffffffffffffffffffffffffffffffffff16146109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e906116d1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000811480610bde575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610b8c9291906115ff565b60206040518083038186803b158015610ba457600080fd5b505afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190611385565b145b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906117d1565b60405180910390fd5b610c9e8363095ea7b360e01b8484604051602401610c3c929190611666565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8c565b505050565b600060019054906101000a900460ff1680610cc9575060008054906101000a900460ff16155b610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d58576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d60610e53565b610d68610f2c565b8015610d895760008060016101000a81548160ff0219169083151502179055505b50565b6000610dee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110ae9092919063ffffffff16565b9050600081511115610e4e5780806020019051810190610e0e919061135c565b610e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e44906117b1565b60405180910390fd5b5b505050565b600060019054906101000a900460ff1680610e79575060008054906101000a900460ff16155b610eb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaf90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f08576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f295760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f52575060008054906101000a900460ff16155b610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8890611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610fe1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610feb610b3d565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080156110ab5760008060016101000a81548160ff0219169083151502179055505b50565b60606110bd84846000856110c6565b90509392505050565b60608247101561110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110290611711565b60405180910390fd5b611114856111da565b611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a90611791565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161117c91906115cd565b60006040518083038185875af1925050503d80600081146111b9576040519150601f19603f3d011682016040523d82523d6000602084013e6111be565b606091505b50915091506111ce8282866111ed565b92505050949350505050565b600080823b905060008111915050919050565b606083156111fd5782905061124d565b6000835111156112105782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611244919061168f565b60405180910390fd5b9392505050565b60008135905061126381611ba5565b92915050565b60008151905061127881611bbc565b92915050565b60008135905061128d81611bd3565b92915050565b6000815190506112a281611bd3565b92915050565b6000602082840312156112ba57600080fd5b60006112c884828501611254565b91505092915050565b6000806000606084860312156112e657600080fd5b60006112f486828701611254565b935050602061130586828701611254565b925050604061131686828701611254565b9150509250925092565b6000806040838503121561133357600080fd5b600061134185828601611254565b92505060206113528582860161127e565b9150509250929050565b60006020828403121561136e57600080fd5b600061137c84828501611269565b91505092915050565b60006020828403121561139757600080fd5b60006113a584828501611293565b91505092915050565b6113b78161184f565b82525050565b60006113c88261180c565b6113d28185611822565b93506113e2818560208601611897565b6113eb816118ca565b840191505092915050565b60006114018261180c565b61140b8185611833565b935061141b818560208601611897565b80840191505092915050565b600061143282611817565b61143c818561183e565b935061144c818560208601611897565b611455816118ca565b840191505092915050565b600061146d60258361183e565b9150611478826118db565b604082019050919050565b600061149060268361183e565b915061149b8261192a565b604082019050919050565b60006114b3602a8361183e565b91506114be82611979565b604082019050919050565b60006114d660268361183e565b91506114e1826119c8565b604082019050919050565b60006114f9602e8361183e565b915061150482611a17565b604082019050919050565b600061151c602d8361183e565b915061152782611a66565b604082019050919050565b600061153f60208361183e565b915061154a82611ab5565b602082019050919050565b6000611562601d8361183e565b915061156d82611ade565b602082019050919050565b6000611585602a8361183e565b915061159082611b07565b604082019050919050565b60006115a860368361183e565b91506115b382611b56565b604082019050919050565b6115c78161188d565b82525050565b60006115d982846113f6565b915081905092915050565b60006020820190506115f960008301846113ae565b92915050565b600060408201905061161460008301856113ae565b61162160208301846113ae565b9392505050565b600060608201905061163d60008301866113ae565b61164a60208301856113ae565b818103604083015261165c81846113bd565b9050949350505050565b600060408201905061167b60008301856113ae565b61168860208301846115be565b9392505050565b600060208201905081810360008301526116a98184611427565b905092915050565b600060208201905081810360008301526116ca81611460565b9050919050565b600060208201905081810360008301526116ea81611483565b9050919050565b6000602082019050818103600083015261170a816114a6565b9050919050565b6000602082019050818103600083015261172a816114c9565b9050919050565b6000602082019050818103600083015261174a816114ec565b9050919050565b6000602082019050818103600083015261176a8161150f565b9050919050565b6000602082019050818103600083015261178a81611532565b9050919050565b600060208201905081810360008301526117aa81611555565b9050919050565b600060208201905081810360008301526117ca81611578565b9050919050565b600060208201905081810360008301526117ea8161159b565b9050919050565b600060208201905061180660008301846115be565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061185a8261186d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156118b557808201518184015260208101905061189a565b838111156118c4576000848401525b50505050565b6000601f19601f8301169050919050565b7f5661756c743a206572633230507265646963617465206d757374206e6f74206260008201527f6520307830000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5661756c743a207472616e7366657220746f206368696c6420636861696e206960008201527f732064697361626c656400000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f5661756c743a20612076616c696420746f6b656e2061646472657373206d757360008201527f742062652070726f766964656400000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b611bae8161184f565b8114611bb957600080fd5b50565b611bc581611861565b8114611bd057600080fd5b50565b611bdc8161188d565b8114611be757600080fd5b5056fea264697066735822122003138b4af282aa828b0992adc836705080f8cc1524a7923eaa8a9de1441810a464736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638e9762fa1161005b5780638e9762fa146100c6578063c0c53b8b146100d0578063f2fde38b146100ec578063fc0c546a146101085761007d565b8063310ec4a714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c60048036038101906100979190611320565b610126565b005b6100a6610258565b005b6100b0610395565b6040516100bd91906115e4565b60405180910390f35b6100ce6103bf565b005b6100ea60048036038101906100e591906112d1565b6106af565b005b610106600480360381019061010191906112a8565b61096b565b005b610110610b17565b60405161011d91906115e4565b60405180910390f35b61012e610b3d565b73ffffffffffffffffffffffffffffffffffffffff1661014c610395565b73ffffffffffffffffffffffffffffffffffffffff16146101a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019990611771565b60405180910390fd5b6101ef8282606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610b459092919063ffffffff16565b8173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf8360405161024c91906117f1565b60405180910390a35050565b610260610b3d565b73ffffffffffffffffffffffffffffffffffffffff1661027e610395565b73ffffffffffffffffffffffffffffffffffffffff16146102d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102cb90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610451576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610448906116f1565b60405180910390fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016104b391906115e4565b60206040518083038186803b1580156104cb57600080fd5b505afa1580156104df573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105039190611385565b9050610552606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16828473ffffffffffffffffffffffffffffffffffffffff16610b459092919063ffffffff16565b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040516020016105c591906117f1565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016105f293929190611628565b600060405180830381600087803b15801561060c57600080fd5b505af1158015610620573d6000803e3d6000fd5b50505050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f74cfd0716c6a416cc5488fa30bf7a391241d033438366aa274c6ab41e7077e45836040516106a391906117f1565b60405180910390a35050565b600060019054906101000a900460ff16806106d5575060008054906101000a900460ff16155b610714576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070b90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610764576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614156107d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107cb90611751565b60405180910390fd5b6107dc610ca3565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461094457600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b8906116b1565b60405180910390fd5b81606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80156109655760008060016101000a81548160ff0219169083151502179055505b50505050565b610973610b3d565b73ffffffffffffffffffffffffffffffffffffffff16610991610395565b73ffffffffffffffffffffffffffffffffffffffff16146109e7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109de90611771565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4e906116d1565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b6000811480610bde575060008373ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e30856040518363ffffffff1660e01b8152600401610b8c9291906115ff565b60206040518083038186803b158015610ba457600080fd5b505afa158015610bb8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bdc9190611385565b145b610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906117d1565b60405180910390fd5b610c9e8363095ea7b360e01b8484604051602401610c3c929190611666565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610d8c565b505050565b600060019054906101000a900460ff1680610cc9575060008054906101000a900460ff16155b610d08576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cff90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d58576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610d60610e53565b610d68610f2c565b8015610d895760008060016101000a81548160ff0219169083151502179055505b50565b6000610dee826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166110ae9092919063ffffffff16565b9050600081511115610e4e5780806020019051810190610e0e919061135c565b610e4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e44906117b1565b60405180910390fd5b5b505050565b600060019054906101000a900460ff1680610e79575060008054906101000a900460ff16155b610eb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eaf90611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610f08576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610f295760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610f52575060008054906101000a900460ff16155b610f91576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8890611731565b60405180910390fd5b60008060019054906101000a900460ff161590508015610fe1576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610feb610b3d565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080156110ab5760008060016101000a81548160ff0219169083151502179055505b50565b60606110bd84846000856110c6565b90509392505050565b60608247101561110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110290611711565b60405180910390fd5b611114856111da565b611153576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161114a90611791565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161117c91906115cd565b60006040518083038185875af1925050503d80600081146111b9576040519150601f19603f3d011682016040523d82523d6000602084013e6111be565b606091505b50915091506111ce8282866111ed565b92505050949350505050565b600080823b905060008111915050919050565b606083156111fd5782905061124d565b6000835111156112105782518084602001fd5b816040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611244919061168f565b60405180910390fd5b9392505050565b60008135905061126381611ba5565b92915050565b60008151905061127881611bbc565b92915050565b60008135905061128d81611bd3565b92915050565b6000815190506112a281611bd3565b92915050565b6000602082840312156112ba57600080fd5b60006112c884828501611254565b91505092915050565b6000806000606084860312156112e657600080fd5b60006112f486828701611254565b935050602061130586828701611254565b925050604061131686828701611254565b9150509250925092565b6000806040838503121561133357600080fd5b600061134185828601611254565b92505060206113528582860161127e565b9150509250929050565b60006020828403121561136e57600080fd5b600061137c84828501611269565b91505092915050565b60006020828403121561139757600080fd5b60006113a584828501611293565b91505092915050565b6113b78161184f565b82525050565b60006113c88261180c565b6113d28185611822565b93506113e2818560208601611897565b6113eb816118ca565b840191505092915050565b60006114018261180c565b61140b8185611833565b935061141b818560208601611897565b80840191505092915050565b600061143282611817565b61143c818561183e565b935061144c818560208601611897565b611455816118ca565b840191505092915050565b600061146d60258361183e565b9150611478826118db565b604082019050919050565b600061149060268361183e565b915061149b8261192a565b604082019050919050565b60006114b3602a8361183e565b91506114be82611979565b604082019050919050565b60006114d660268361183e565b91506114e1826119c8565b604082019050919050565b60006114f9602e8361183e565b915061150482611a17565b604082019050919050565b600061151c602d8361183e565b915061152782611a66565b604082019050919050565b600061153f60208361183e565b915061154a82611ab5565b602082019050919050565b6000611562601d8361183e565b915061156d82611ade565b602082019050919050565b6000611585602a8361183e565b915061159082611b07565b604082019050919050565b60006115a860368361183e565b91506115b382611b56565b604082019050919050565b6115c78161188d565b82525050565b60006115d982846113f6565b915081905092915050565b60006020820190506115f960008301846113ae565b92915050565b600060408201905061161460008301856113ae565b61162160208301846113ae565b9392505050565b600060608201905061163d60008301866113ae565b61164a60208301856113ae565b818103604083015261165c81846113bd565b9050949350505050565b600060408201905061167b60008301856113ae565b61168860208301846115be565b9392505050565b600060208201905081810360008301526116a98184611427565b905092915050565b600060208201905081810360008301526116ca81611460565b9050919050565b600060208201905081810360008301526116ea81611483565b9050919050565b6000602082019050818103600083015261170a816114a6565b9050919050565b6000602082019050818103600083015261172a816114c9565b9050919050565b6000602082019050818103600083015261174a816114ec565b9050919050565b6000602082019050818103600083015261176a8161150f565b9050919050565b6000602082019050818103600083015261178a81611532565b9050919050565b600060208201905081810360008301526117aa81611555565b9050919050565b600060208201905081810360008301526117ca81611578565b9050919050565b600060208201905081810360008301526117ea8161159b565b9050919050565b600060208201905061180660008301846115be565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600061185a8261186d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156118b557808201518184015260208101905061189a565b838111156118c4576000848401525b50505050565b6000601f19601f8301169050919050565b7f5661756c743a206572633230507265646963617465206d757374206e6f74206260008201527f6520307830000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5661756c743a207472616e7366657220746f206368696c6420636861696e206960008201527f732064697361626c656400000000000000000000000000000000000000000000602082015250565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f5661756c743a20612076616c696420746f6b656e2061646472657373206d757360008201527f742062652070726f766964656400000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b7f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60008201527f20746f206e6f6e2d7a65726f20616c6c6f77616e636500000000000000000000602082015250565b611bae8161184f565b8114611bb957600080fd5b50565b611bc581611861565b8114611bd057600080fd5b50565b611bdc8161188d565b8114611be757600080fd5b5056fea264697066735822122003138b4af282aa828b0992adc836705080f8cc1524a7923eaa8a9de1441810a464736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 136,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 139,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 220,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 834,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "rootChainManager",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(IRootChainManager)1018"
      },
      {
        "astId": 836,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "erc20Predicate",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 838,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "token",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRootChainManager)1018": {
        "encoding": "inplace",
        "label": "contract IRootChainManager",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}