{
  "address": "0x91678182128375a7adE0885D7b71426E4849a0E9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetAllowance",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "depositToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bond",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "rootChainManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "erc20Predicate",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x962daf8c0a8f0a21dd829a7a937bf7a88ed75a8c156ee258b68aa80712a0e0b4",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xB011D306D36c396847bA42b1c7AEb8E96C540d9a",
    "contractAddress": null,
    "transactionIndex": 1,
    "gasUsed": "1209986",
    "logsBloom": "0x
    "blockHash": "0xdfeb13e7e667be0fa3b90d36d2233c0dccbc5e31e3ef346180dd471e73f1ace6",
    "transactionHash": "0x962daf8c0a8f0a21dd829a7a937bf7a88ed75a8c156ee258b68aa80712a0e0b4",
    "logs": [],
    "blockNumber": 4823713,
    "cumulativeGasUsed": "1329002",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "ba9fcecf68c97f7bc761efaca8517f26",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetAllowance\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bond\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rootChainManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"erc20Predicate\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolygonCommunityVault.sol\":\"PolygonCommunityVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"contracts/PolygonCommunityVault.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"./matic/IRootChainManager.sol\\\";\\n\\ncontract PolygonCommunityVault is OwnableUpgradeable {\\n    IERC20 private _bond;\\n    IRootChainManager _rootChainManager;\\n    address _erc20Predicate;\\n\\n    event SetAllowance(address indexed caller, address indexed spender, uint256 amount);\\n\\n    function initialize(address bond, address rootChainManager, address erc20Predicate) initializer public {\\n        __Ownable_init();\\n\\n        _bond = IERC20(bond);\\n\\n        if (rootChainManager != address(0)) {\\n            require(erc20Predicate != address(0), \\\"if root chain manager is set, erc20 predicate must not be 0x0\\\");\\n\\n            _erc20Predicate = erc20Predicate;\\n            _rootChainManager = IRootChainManager(rootChainManager);\\n        }\\n     }\\n\\n    function setAllowance(address spender, uint amount) public onlyOwner {\\n        _bond.approve(spender, amount);\\n\\n        emit SetAllowance(msg.sender, spender, amount);\\n    }\\n\\n    // -----\\n    // TODO need to discuss if public or onlyOwner\\n    function depositToken(address token) public {\\n        require(token != address(0), \\\"token to be deposited must be specified\\\");\\n        require(_erc20Predicate != address(0), \\\"deposit to polygon not enabled on this vault\\\");\\n\\n        uint256 amount = IERC20(token).balanceOf(address(this));\\n        IERC20(token).approve(_erc20Predicate, amount);\\n        _rootChainManager.depositFor(address(this), token, abi.encode(amount));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x8f658650ec5db98de66c178d3d4dfbbbad1805ab94a430dc7a96bfa822a7a00d\",\"license\":\"Apache-2.0\"},\"contracts/matic/IRootChainManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.4;\\n\\ninterface IRootChainManager {\\n    event TokenMapped(\\n        address indexed rootToken,\\n        address indexed childToken,\\n        bytes32 indexed tokenType\\n    );\\n\\n    event PredicateRegistered(\\n        bytes32 indexed tokenType,\\n        address indexed predicateAddress\\n    );\\n\\n    function registerPredicate(bytes32 tokenType, address predicateAddress)\\n        external;\\n\\n    function mapToken(\\n        address rootToken,\\n        address childToken,\\n        bytes32 tokenType\\n    ) external;\\n\\n    function cleanMapToken(\\n        address rootToken,\\n        address childToken\\n    ) external;\\n\\n    function remapToken(\\n        address rootToken,\\n        address childToken,\\n        bytes32 tokenType\\n    ) external;\\n\\n    function depositEtherFor(address user) external payable;\\n\\n    function depositFor(\\n        address user,\\n        address rootToken,\\n        bytes calldata depositData\\n    ) external;\\n\\n    function exit(bytes calldata inputData) external;\\n}\\n\",\"keccak256\":\"0x541a58b38c01441c5b90d64c127dc3148ecfd90034a590abeeb9ebfaee4b8242\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506114fa806100206000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80632fd5526514610067578063310ec4a714610083578063715018a61461009f5780638da5cb5b146100a9578063c0c53b8b146100c7578063f2fde38b146100e3575b600080fd5b610081600480360381019061007c9190610e86565b6100ff565b005b61009d60048036038101906100989190610efe565b6103f2565b005b6100a7610587565b005b6100b16106c4565b6040516100be91906110b5565b60405180910390f35b6100e160048036038101906100dc9190610eaf565b6106ee565b005b6100fd60048036038101906100f89190610e86565b61093a565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561016f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610166906111d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890611157565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161023c91906110b5565b60206040518083038186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610f63565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102eb92919061110e565b602060405180830381600087803b15801561030557600080fd5b505af1158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d9190610f3a565b50606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30848460405160200161038f91906111f7565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103bc939291906110d0565b600060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050505050565b6103fa610ae6565b73ffffffffffffffffffffffffffffffffffffffff166104186106c4565b73ffffffffffffffffffffffffffffffffffffffff161461046e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610465906111b7565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016104cb92919061110e565b602060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f3a565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf8360405161057b91906111f7565b60405180910390a35050565b61058f610ae6565b73ffffffffffffffffffffffffffffffffffffffff166105ad6106c4565b73ffffffffffffffffffffffffffffffffffffffff1614610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa906111b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610714575060008054906101000a900460ff16155b610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611177565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6107ab610aee565b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461091357600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790611197565b60405180910390fd5b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80156109345760008060016101000a81548160ff0219169083151502179055505b50505050565b610942610ae6565b73ffffffffffffffffffffffffffffffffffffffff166109606106c4565b73ffffffffffffffffffffffffffffffffffffffff16146109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad906111b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90611137565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600060019054906101000a900460ff1680610b14575060008054906101000a900460ff16155b610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a90611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ba3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610bab610bd7565b610bb3610cb0565b8015610bd45760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610bfd575060008054906101000a900460ff16155b610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c8c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610cad5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610cd6575060008054906101000a900460ff16155b610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d65576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610d6f610ae6565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610e2f5760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610e418161147f565b92915050565b600081519050610e5681611496565b92915050565b600081359050610e6b816114ad565b92915050565b600081519050610e80816114ad565b92915050565b600060208284031215610e9857600080fd5b6000610ea684828501610e32565b91505092915050565b600080600060608486031215610ec457600080fd5b6000610ed286828701610e32565b9350506020610ee386828701610e32565b9250506040610ef486828701610e32565b9150509250925092565b60008060408385031215610f1157600080fd5b6000610f1f85828601610e32565b9250506020610f3085828601610e5c565b9150509250929050565b600060208284031215610f4c57600080fd5b6000610f5a84828501610e47565b91505092915050565b600060208284031215610f7557600080fd5b6000610f8384828501610e71565b91505092915050565b610f958161123f565b82525050565b6000610fa682611212565b610fb0818561121d565b9350610fc0818560208601611287565b610fc9816112ba565b840191505092915050565b6000610fe160268361122e565b9150610fec826112cb565b604082019050919050565b6000611004602c8361122e565b915061100f8261131a565b604082019050919050565b6000611027602e8361122e565b915061103282611369565b604082019050919050565b600061104a603d8361122e565b9150611055826113b8565b604082019050919050565b600061106d60208361122e565b915061107882611407565b602082019050919050565b600061109060278361122e565b915061109b82611430565b604082019050919050565b6110af8161127d565b82525050565b60006020820190506110ca6000830184610f8c565b92915050565b60006060820190506110e56000830186610f8c565b6110f26020830185610f8c565b81810360408301526111048184610f9b565b9050949350505050565b60006040820190506111236000830185610f8c565b61113060208301846110a6565b9392505050565b6000602082019050818103600083015261115081610fd4565b9050919050565b6000602082019050818103600083015261117081610ff7565b9050919050565b600060208201905081810360008301526111908161101a565b9050919050565b600060208201905081810360008301526111b08161103d565b9050919050565b600060208201905081810360008301526111d081611060565b9050919050565b600060208201905081810360008301526111f081611083565b9050919050565b600060208201905061120c60008301846110a6565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061124a8261125d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112a557808201518184015260208101905061128a565b838111156112b4576000848401525b50505050565b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420746f20706f6c79676f6e206e6f7420656e61626c6564206f60008201527f6e2074686973207661756c740000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f696620726f6f7420636861696e206d616e61676572206973207365742c20657260008201527f63323020707265646963617465206d757374206e6f7420626520307830000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f6b656e20746f206265206465706f7369746564206d75737420626520737060008201527f6563696669656400000000000000000000000000000000000000000000000000602082015250565b6114888161123f565b811461149357600080fd5b50565b61149f81611251565b81146114aa57600080fd5b50565b6114b68161127d565b81146114c157600080fd5b5056fea2646970667358221220930ef4a1ab803c777325fbbc97313c4531b3fa4ba9f4d93cd8070918b670c24d64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80632fd5526514610067578063310ec4a714610083578063715018a61461009f5780638da5cb5b146100a9578063c0c53b8b146100c7578063f2fde38b146100e3575b600080fd5b610081600480360381019061007c9190610e86565b6100ff565b005b61009d60048036038101906100989190610efe565b6103f2565b005b6100a7610587565b005b6100b16106c4565b6040516100be91906110b5565b60405180910390f35b6100e160048036038101906100dc9190610eaf565b6106ee565b005b6100fd60048036038101906100f89190610e86565b61093a565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561016f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610166906111d7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610201576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101f890611157565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161023c91906110b5565b60206040518083038186803b15801561025457600080fd5b505afa158015610268573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028c9190610f63565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016102eb92919061110e565b602060405180830381600087803b15801561030557600080fd5b505af1158015610319573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033d9190610f3a565b50606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30848460405160200161038f91906111f7565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103bc939291906110d0565b600060405180830381600087803b1580156103d657600080fd5b505af11580156103ea573d6000803e3d6000fd5b505050505050565b6103fa610ae6565b73ffffffffffffffffffffffffffffffffffffffff166104186106c4565b73ffffffffffffffffffffffffffffffffffffffff161461046e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610465906111b7565b60405180910390fd5b606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016104cb92919061110e565b602060405180830381600087803b1580156104e557600080fd5b505af11580156104f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051d9190610f3a565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf8360405161057b91906111f7565b60405180910390a35050565b61058f610ae6565b73ffffffffffffffffffffffffffffffffffffffff166105ad6106c4565b73ffffffffffffffffffffffffffffffffffffffff1614610603576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105fa906111b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060019054906101000a900460ff1680610714575060008054906101000a900460ff16155b610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611177565b60405180910390fd5b60008060019054906101000a900460ff1615905080156107a3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6107ab610aee565b83606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461091357600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610890576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088790611197565b60405180910390fd5b81606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80156109345760008060016101000a81548160ff0219169083151502179055505b50505050565b610942610ae6565b73ffffffffffffffffffffffffffffffffffffffff166109606106c4565b73ffffffffffffffffffffffffffffffffffffffff16146109b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109ad906111b7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1d90611137565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b600060019054906101000a900460ff1680610b14575060008054906101000a900460ff16155b610b53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4a90611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610ba3576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610bab610bd7565b610bb3610cb0565b8015610bd45760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610bfd575060008054906101000a900460ff16155b610c3c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3390611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610c8c576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610cad5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610cd6575060008054906101000a900460ff16155b610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c90611177565b60405180910390fd5b60008060019054906101000a900460ff161590508015610d65576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610d6f610ae6565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610e2f5760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610e418161147f565b92915050565b600081519050610e5681611496565b92915050565b600081359050610e6b816114ad565b92915050565b600081519050610e80816114ad565b92915050565b600060208284031215610e9857600080fd5b6000610ea684828501610e32565b91505092915050565b600080600060608486031215610ec457600080fd5b6000610ed286828701610e32565b9350506020610ee386828701610e32565b9250506040610ef486828701610e32565b9150509250925092565b60008060408385031215610f1157600080fd5b6000610f1f85828601610e32565b9250506020610f3085828601610e5c565b9150509250929050565b600060208284031215610f4c57600080fd5b6000610f5a84828501610e47565b91505092915050565b600060208284031215610f7557600080fd5b6000610f8384828501610e71565b91505092915050565b610f958161123f565b82525050565b6000610fa682611212565b610fb0818561121d565b9350610fc0818560208601611287565b610fc9816112ba565b840191505092915050565b6000610fe160268361122e565b9150610fec826112cb565b604082019050919050565b6000611004602c8361122e565b915061100f8261131a565b604082019050919050565b6000611027602e8361122e565b915061103282611369565b604082019050919050565b600061104a603d8361122e565b9150611055826113b8565b604082019050919050565b600061106d60208361122e565b915061107882611407565b602082019050919050565b600061109060278361122e565b915061109b82611430565b604082019050919050565b6110af8161127d565b82525050565b60006020820190506110ca6000830184610f8c565b92915050565b60006060820190506110e56000830186610f8c565b6110f26020830185610f8c565b81810360408301526111048184610f9b565b9050949350505050565b60006040820190506111236000830185610f8c565b61113060208301846110a6565b9392505050565b6000602082019050818103600083015261115081610fd4565b9050919050565b6000602082019050818103600083015261117081610ff7565b9050919050565b600060208201905081810360008301526111908161101a565b9050919050565b600060208201905081810360008301526111b08161103d565b9050919050565b600060208201905081810360008301526111d081611060565b9050919050565b600060208201905081810360008301526111f081611083565b9050919050565b600060208201905061120c60008301846110a6565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061124a8261125d565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156112a557808201518184015260208101905061128a565b838111156112b4576000848401525b50505050565b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f6465706f73697420746f20706f6c79676f6e206e6f7420656e61626c6564206f60008201527f6e2074686973207661756c740000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f696620726f6f7420636861696e206d616e61676572206973207365742c20657260008201527f63323020707265646963617465206d757374206e6f7420626520307830000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f746f6b656e20746f206265206465706f7369746564206d75737420626520737060008201527f6563696669656400000000000000000000000000000000000000000000000000602082015250565b6114888161123f565b811461149357600080fd5b50565b61149f81611251565b81146114aa57600080fd5b50565b6114b68161127d565b81146114c157600080fd5b5056fea2646970667358221220930ef4a1ab803c777325fbbc97313c4531b3fa4ba9f4d93cd8070918b670c24d64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 136,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 139,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 220,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 864,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_bond",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(IERC20)806"
      },
      {
        "astId": 867,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_rootChainManager",
        "offset": 0,
        "slot": "102",
        "type": "t_contract(IRootChainManager)1079"
      },
      {
        "astId": 869,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_erc20Predicate",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC20)806": {
        "encoding": "inplace",
        "label": "contract IERC20",
        "numberOfBytes": "20"
      },
      "t_contract(IRootChainManager)1079": {
        "encoding": "inplace",
        "label": "contract IRootChainManager",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}