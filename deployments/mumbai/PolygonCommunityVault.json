{
  "address": "0x5aFFF8eC52EF31603A512581b50d638D32925443",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "SetAllowance",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TransferToChild",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_rootChainManager",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_erc20Predicate",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAllowance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferToChild",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x24ca049ab149de0ef20ee2bdfe0a9a79ab02fd98a349ec0b77bbd3584dcc8316",
  "receipt": {
    "to": "0x4e59b44847b379578588920cA78FbF26c0B4956C",
    "from": "0xB011D306D36c396847bA42b1c7AEb8E96C540d9a",
    "contractAddress": null,
    "transactionIndex": 0,
    "gasUsed": "1271372",
    "logsBloom": "0x
    "blockHash": "0xc3c1107803eb8a0296c7c6624de617eecddf2886b508ebe38ad8956c03c9fe52",
    "transactionHash": "0x24ca049ab149de0ef20ee2bdfe0a9a79ab02fd98a349ec0b77bbd3584dcc8316",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 15255537,
        "transactionHash": "0x24ca049ab149de0ef20ee2bdfe0a9a79ab02fd98a349ec0b77bbd3584dcc8316",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000b011d306d36c396847ba42b1c7aeb8e96c540d9a",
          "0x000000000000000000000000c26880a0af2ea0c7e8130e6ec47af756465452e8"
        ],
        "data": "0x0000000000000000000000000000000000000000000000000009089cb8dff0000000000000000000000000000000000000000000000000006ee73e634c98c80000000000000000000000000000000000000000000000009d96d153870bac82870000000000000000000000000000000000000000000000006ede35c693b8d80000000000000000000000000000000000000000000000009d96da5c23c48c7287",
        "logIndex": 0,
        "blockHash": "0xc3c1107803eb8a0296c7c6624de617eecddf2886b508ebe38ad8956c03c9fe52"
      }
    ],
    "blockNumber": 15255537,
    "cumulativeGasUsed": "1271372",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "a6c42eac6fbd9ebe94059aaa07d74c04",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"SetAllowance\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TransferToChild\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rootChainManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_erc20Predicate\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferToChild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PolygonCommunityVault.sol\":\"PolygonCommunityVault\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/ContextUpgradeable.sol\\\";\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    function __Ownable_init() internal initializer {\\n        __Context_init_unchained();\\n        __Ownable_init_unchained();\\n    }\\n\\n    function __Ownable_init_unchained() internal initializer {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n    uint256[49] private __gap;\\n}\\n\",\"keccak256\":\"0xc68cad93ce702131a09334e8705d4af062278defa99627a2c94685fb96ff8cc4\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// solhint-disable-next-line compiler-version\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since a proxied contract can't have a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n */\\nabstract contract Initializable {\\n\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        require(_initializing || !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x67d2f282a9678e58e878a0b774041ba7a01e2740a262aea97a3f681339914713\",\"license\":\"MIT\"},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\nimport \\\"../proxy/utils/Initializable.sol\\\";\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract ContextUpgradeable is Initializable {\\n    function __Context_init() internal initializer {\\n        __Context_init_unchained();\\n    }\\n\\n    function __Context_init_unchained() internal initializer {\\n    }\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n    uint256[50] private __gap;\\n}\\n\",\"keccak256\":\"0x8e9eb503de1189f50c5f16fef327da310b11898d6b9ab3ca937df07c35233b9e\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835\",\"license\":\"MIT\"},\"contracts/PolygonCommunityVault.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.4;\\n\\nimport \\\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\nimport \\\"./matic/IRootChainManager.sol\\\";\\n\\ncontract PolygonCommunityVault is OwnableUpgradeable {\\n    IRootChainManager internal rootChainManager;\\n    address internal erc20Predicate;\\n\\n    address public token;\\n\\n    event SetAllowance(address indexed caller, address indexed spender, uint256 amount);\\n    event TransferToChild(address indexed caller, address indexed token,  uint256 amount);\\n\\n    function initialize(address _token, address _rootChainManager, address _erc20Predicate)  public initializer {\\n        require(_token != address(0), \\\"Vault: a valid token address must be provided\\\");\\n\\n        __Ownable_init();\\n\\n        token = _token;\\n\\n        if (_rootChainManager != address(0)) {\\n            require(_erc20Predicate != address(0), \\\"Vault: erc20Predicate must not be 0x0\\\");\\n\\n            erc20Predicate = _erc20Predicate;\\n            rootChainManager = IRootChainManager(_rootChainManager);\\n        }\\n     }\\n\\n    function setAllowance(address spender, uint amount) public onlyOwner {\\n        IERC20(token).approve(spender, amount);\\n\\n        emit SetAllowance(msg.sender, spender, amount);\\n    }\\n\\n    function transferToChild() public { // onlyOnRoot , maybe onlyOwner\\n        require(erc20Predicate != address(0), \\\"Vault: transfer to child chain is disabled\\\");\\n\\n        IERC20 erc20 = IERC20(token);\\n\\n        uint256 amount = erc20.balanceOf(address(this));\\n        erc20.approve(erc20Predicate, amount);\\n        rootChainManager.depositFor(address(this), token, abi.encode(amount));\\n\\n        emit TransferToChild(msg.sender, token, amount);\\n    }\\n\\n}\\n\",\"keccak256\":\"0x1a6ce936fe6ad8dd329e12c4d15e8980a9b3ac688eee58ecedddfc89e4e01410\",\"license\":\"Apache-2.0\"},\"contracts/matic/IRootChainManager.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.4;\\n\\ninterface IRootChainManager {\\n    function depositEtherFor(address user) external payable;\\n\\n    function depositFor(\\n        address user,\\n        address rootToken,\\n        bytes calldata depositData\\n    ) external;\\n\\n    function exit(bytes calldata inputData) external;\\n}\\n\",\"keccak256\":\"0x4d5bd5093599321938bc1d23f401687db9aead051d393be24dc69ab68e6fb495\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611617806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638e9762fa1161005b5780638e9762fa146100c6578063c0c53b8b146100d0578063f2fde38b146100ec578063fc0c546a146101085761007d565b8063310ec4a714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c6004803603810190610097919061101b565b610126565b005b6100a66102bb565b005b6100b06103f8565b6040516100bd91906111d2565b60405180910390f35b6100ce610422565b005b6100ea60048036038101906100e59190610fcc565b610775565b005b61010660048036038101906101019190610fa3565b610a31565b005b610110610bdd565b60405161011d91906111d2565b60405180910390f35b61012e610c03565b73ffffffffffffffffffffffffffffffffffffffff1661014c6103f8565b73ffffffffffffffffffffffffffffffffffffffff16146101a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610199906112f4565b60405180910390fd5b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016101ff92919061122b565b602060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190611057565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf836040516102af9190611314565b60405180910390a35050565b6102c3610c03565b73ffffffffffffffffffffffffffffffffffffffff166102e16103f8565b73ffffffffffffffffffffffffffffffffffffffff1614610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e906112f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90611294565b60405180910390fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161051691906111d2565b60206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190611080565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016105c592919061122b565b602060405180830381600087803b1580156105df57600080fd5b505af11580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190611057565b50606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405160200161068b9190611314565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016106b8939291906111ed565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f74cfd0716c6a416cc5488fa30bf7a391241d033438366aa274c6ab41e7077e45836040516107699190611314565b60405180910390a35050565b600060019054906101000a900460ff168061079b575060008054906101000a900460ff16155b6107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d1906112b4565b60405180910390fd5b60008060019054906101000a900460ff16159050801561082a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561089a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610891906112d4565b60405180910390fd5b6108a2610c0b565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a0a57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90611254565b60405180910390fd5b81606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8015610a2b5760008060016101000a81548160ff0219169083151502179055505b50505050565b610a39610c03565b73ffffffffffffffffffffffffffffffffffffffff16610a576103f8565b73ffffffffffffffffffffffffffffffffffffffff1614610aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa4906112f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490611274565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600060019054906101000a900460ff1680610c31575060008054906101000a900460ff16155b610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c67906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610cc0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610cc8610cf4565b610cd0610dcd565b8015610cf15760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d1a575060008054906101000a900460ff16155b610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d50906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610da9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610dca5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610df3575060008054906101000a900460ff16155b610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e29906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e82576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610e8c610c03565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610f4c5760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610f5e8161159c565b92915050565b600081519050610f73816115b3565b92915050565b600081359050610f88816115ca565b92915050565b600081519050610f9d816115ca565b92915050565b600060208284031215610fb557600080fd5b6000610fc384828501610f4f565b91505092915050565b600080600060608486031215610fe157600080fd5b6000610fef86828701610f4f565b935050602061100086828701610f4f565b925050604061101186828701610f4f565b9150509250925092565b6000806040838503121561102e57600080fd5b600061103c85828601610f4f565b925050602061104d85828601610f79565b9150509250929050565b60006020828403121561106957600080fd5b600061107784828501610f64565b91505092915050565b60006020828403121561109257600080fd5b60006110a084828501610f8e565b91505092915050565b6110b28161135c565b82525050565b60006110c38261132f565b6110cd818561133a565b93506110dd8185602086016113a4565b6110e6816113d7565b840191505092915050565b60006110fe60258361134b565b9150611109826113e8565b604082019050919050565b600061112160268361134b565b915061112c82611437565b604082019050919050565b6000611144602a8361134b565b915061114f82611486565b604082019050919050565b6000611167602e8361134b565b9150611172826114d5565b604082019050919050565b600061118a602d8361134b565b915061119582611524565b604082019050919050565b60006111ad60208361134b565b91506111b882611573565b602082019050919050565b6111cc8161139a565b82525050565b60006020820190506111e760008301846110a9565b92915050565b600060608201905061120260008301866110a9565b61120f60208301856110a9565b818103604083015261122181846110b8565b9050949350505050565b600060408201905061124060008301856110a9565b61124d60208301846111c3565b9392505050565b6000602082019050818103600083015261126d816110f1565b9050919050565b6000602082019050818103600083015261128d81611114565b9050919050565b600060208201905081810360008301526112ad81611137565b9050919050565b600060208201905081810360008301526112cd8161115a565b9050919050565b600060208201905081810360008301526112ed8161117d565b9050919050565b6000602082019050818103600083015261130d816111a0565b9050919050565b600060208201905061132960008301846111c3565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113678261137a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156113c25780820151818401526020810190506113a7565b838111156113d1576000848401525b50505050565b6000601f19601f8301169050919050565b7f5661756c743a206572633230507265646963617465206d757374206e6f74206260008201527f6520307830000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5661756c743a207472616e7366657220746f206368696c6420636861696e206960008201527f732064697361626c656400000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f5661756c743a20612076616c696420746f6b656e2061646472657373206d757360008201527f742062652070726f766964656400000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6115a58161135c565b81146115b057600080fd5b50565b6115bc8161136e565b81146115c757600080fd5b50565b6115d38161139a565b81146115de57600080fd5b5056fea2646970667358221220f3a391de45936430f507bc7e02c7d3b55dc2b77a14e920b42268e12c2900c69a64736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638e9762fa1161005b5780638e9762fa146100c6578063c0c53b8b146100d0578063f2fde38b146100ec578063fc0c546a146101085761007d565b8063310ec4a714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c6004803603810190610097919061101b565b610126565b005b6100a66102bb565b005b6100b06103f8565b6040516100bd91906111d2565b60405180910390f35b6100ce610422565b005b6100ea60048036038101906100e59190610fcc565b610775565b005b61010660048036038101906101019190610fa3565b610a31565b005b610110610bdd565b60405161011d91906111d2565b60405180910390f35b61012e610c03565b73ffffffffffffffffffffffffffffffffffffffff1661014c6103f8565b73ffffffffffffffffffffffffffffffffffffffff16146101a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610199906112f4565b60405180910390fd5b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b383836040518363ffffffff1660e01b81526004016101ff92919061122b565b602060405180830381600087803b15801561021957600080fd5b505af115801561022d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102519190611057565b508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f3c07380f6fcae3bac39771c60e5c680334073911f2176b65f1d6925ba0badcdf836040516102af9190611314565b60405180910390a35050565b6102c3610c03565b73ffffffffffffffffffffffffffffffffffffffff166102e16103f8565b73ffffffffffffffffffffffffffffffffffffffff1614610337576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161032e906112f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600073ffffffffffffffffffffffffffffffffffffffff16606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156104b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ab90611294565b60405180910390fd5b6000606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161051691906111d2565b60206040518083038186803b15801561052e57600080fd5b505afa158015610542573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105669190611080565b90508173ffffffffffffffffffffffffffffffffffffffff1663095ea7b3606660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016105c592919061122b565b602060405180830381600087803b1580156105df57600080fd5b505af11580156105f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106179190611057565b50606560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e3dec8fb30606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460405160200161068b9190611314565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016106b8939291906111ed565b600060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b50505050606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f74cfd0716c6a416cc5488fa30bf7a391241d033438366aa274c6ab41e7077e45836040516107699190611314565b60405180910390a35050565b600060019054906101000a900460ff168061079b575060008054906101000a900460ff16155b6107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d1906112b4565b60405180910390fd5b60008060019054906101000a900460ff16159050801561082a576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141561089a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610891906112d4565b60405180910390fd5b6108a2610c0b565b83606760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610a0a57600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610987576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097e90611254565b60405180910390fd5b81606660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082606560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b8015610a2b5760008060016101000a81548160ff0219169083151502179055505b50505050565b610a39610c03565b73ffffffffffffffffffffffffffffffffffffffff16610a576103f8565b73ffffffffffffffffffffffffffffffffffffffff1614610aad576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aa4906112f4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1490611274565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16603360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b606760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600033905090565b600060019054906101000a900460ff1680610c31575060008054906101000a900460ff16155b610c70576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c67906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610cc0576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b610cc8610cf4565b610cd0610dcd565b8015610cf15760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610d1a575060008054906101000a900460ff16155b610d59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d50906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610da9576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b8015610dca5760008060016101000a81548160ff0219169083151502179055505b50565b600060019054906101000a900460ff1680610df3575060008054906101000a900460ff16155b610e32576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e29906112b4565b60405180910390fd5b60008060019054906101000a900460ff161590508015610e82576001600060016101000a81548160ff02191690831515021790555060016000806101000a81548160ff0219169083151502179055505b6000610e8c610c03565b905080603360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508015610f4c5760008060016101000a81548160ff0219169083151502179055505b50565b600081359050610f5e8161159c565b92915050565b600081519050610f73816115b3565b92915050565b600081359050610f88816115ca565b92915050565b600081519050610f9d816115ca565b92915050565b600060208284031215610fb557600080fd5b6000610fc384828501610f4f565b91505092915050565b600080600060608486031215610fe157600080fd5b6000610fef86828701610f4f565b935050602061100086828701610f4f565b925050604061101186828701610f4f565b9150509250925092565b6000806040838503121561102e57600080fd5b600061103c85828601610f4f565b925050602061104d85828601610f79565b9150509250929050565b60006020828403121561106957600080fd5b600061107784828501610f64565b91505092915050565b60006020828403121561109257600080fd5b60006110a084828501610f8e565b91505092915050565b6110b28161135c565b82525050565b60006110c38261132f565b6110cd818561133a565b93506110dd8185602086016113a4565b6110e6816113d7565b840191505092915050565b60006110fe60258361134b565b9150611109826113e8565b604082019050919050565b600061112160268361134b565b915061112c82611437565b604082019050919050565b6000611144602a8361134b565b915061114f82611486565b604082019050919050565b6000611167602e8361134b565b9150611172826114d5565b604082019050919050565b600061118a602d8361134b565b915061119582611524565b604082019050919050565b60006111ad60208361134b565b91506111b882611573565b602082019050919050565b6111cc8161139a565b82525050565b60006020820190506111e760008301846110a9565b92915050565b600060608201905061120260008301866110a9565b61120f60208301856110a9565b818103604083015261122181846110b8565b9050949350505050565b600060408201905061124060008301856110a9565b61124d60208301846111c3565b9392505050565b6000602082019050818103600083015261126d816110f1565b9050919050565b6000602082019050818103600083015261128d81611114565b9050919050565b600060208201905081810360008301526112ad81611137565b9050919050565b600060208201905081810360008301526112cd8161115a565b9050919050565b600060208201905081810360008301526112ed8161117d565b9050919050565b6000602082019050818103600083015261130d816111a0565b9050919050565b600060208201905061132960008301846111c3565b92915050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b60006113678261137a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b838110156113c25780820151818401526020810190506113a7565b838111156113d1576000848401525b50505050565b6000601f19601f8301169050919050565b7f5661756c743a206572633230507265646963617465206d757374206e6f74206260008201527f6520307830000000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f5661756c743a207472616e7366657220746f206368696c6420636861696e206960008201527f732064697361626c656400000000000000000000000000000000000000000000602082015250565b7f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160008201527f647920696e697469616c697a6564000000000000000000000000000000000000602082015250565b7f5661756c743a20612076616c696420746f6b656e2061646472657373206d757360008201527f742062652070726f766964656400000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6115a58161135c565b81146115b057600080fd5b50565b6115bc8161136e565b81146115c757600080fd5b50565b6115d38161139a565b81146115de57600080fd5b5056fea2646970667358221220f3a391de45936430f507bc7e02c7d3b55dc2b77a14e920b42268e12c2900c69a64736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 136,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 139,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 220,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 10,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "_owner",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 129,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "__gap",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 309,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "rootChainManager",
        "offset": 0,
        "slot": "101",
        "type": "t_contract(IRootChainManager)493"
      },
      {
        "astId": 311,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "erc20Predicate",
        "offset": 0,
        "slot": "102",
        "type": "t_address"
      },
      {
        "astId": 313,
        "contract": "contracts/PolygonCommunityVault.sol:PolygonCommunityVault",
        "label": "token",
        "offset": 0,
        "slot": "103",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)49_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568"
      },
      "t_array(t_uint256)50_storage": {
        "base": "t_uint256",
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IRootChainManager)493": {
        "encoding": "inplace",
        "label": "contract IRootChainManager",
        "numberOfBytes": "20"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}